---
-
   name: Provisione VM RHEL  in VMware 
   hosts: localhost 
   vars: 

   tasks: 

   - name: Create a virtual machine from a template
     vmware_guest:
        datacenter: "DTC01"
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        folder: /ansiblevms
        state: present
        guest_id: "rhel7_64Guest"
        name: "teste-02-debug.labs.corp"
        template: "t-rhel78"

        
    # This is hostname of particular ESXi server on which user wants VM to be deployed
        esxi_hostname: esx01.labs.corp
        disk:
        - size_gb: 15
          type: thin
          datastore: datastore1
        hardware:
          memory_mb: 512
          num_cpus: 2
          scsi: paravirtual
        networks:
        - name: "VM Network"
          #mac: aa:bb:dd:aa:00:14
          ip: "192.168.0.51"
          netmask: "255.255.255.0"
          gateway: "192.168.0.10"
          domain: "labs.corp"
          dns_servers: "192.168.0.220"
          device_type: "vmxnet3"
          start_connected: yes
          wake_on_lan: yes
        wait_for_ip_address: yes
        customization: 
          autologon: yes
          dns_servers: "192.168.0.220"
          domain: "labs.corp"
     delegate_to: "localhost"
     register: "deploy_vm"   

   - name: Debug 
     debug: 
        msg: 
        - Saida dos deployment  '{{ deploy_vm }}'  

   - name: debug info + leitura via loop 
     debug: 
        msg: 
        - saida1 '{{item.hw_name}}'
        - saida2 '{{item.ipv4}}' 
     with_items:
        - "{{ deploy_vm.instance }}" 

   - name: leitura de variavel direta - 1 ok
     debug: 
        msg: 
        - saida1 direta  "{{deploy_vm.instance.hw_name}}" 
     ignore_errors: true 

   - name: Add new instance to host group
     add_host: hostname={{ deploy_vm.instance.ipv4 }}  groupname=marrone
     with_items: "{{ deploy_vm.instance }}"

#inventoryname=provisionamento

   - name: Wait for SSH to come up
     wait_for: host={{ deploy_vm.instance.ipv4 }} port=22 delay=60 timeout=360 state=started
     #with_items: "{{ deploy_vm.instance }}"
     ignore_errors: true
    
#  - name: Set variable for instance IP
#    set_fact:
#      instance_ip: "{{ item.public_ip }}"
#    with_items: "{{ ec2.instances }}" 


 #  - name: set stats 
 #    set_stats: 
 #      data: 
 #       2_nome_da_vm: "{{deploy_vm.instance.hw_name}}" 
 #       per_host: yes 
 #    register: 2_nome_da_vm

# Second, reconfigure 
- name: Second play execute all process to subscription Red Hat  
  hosts: marrone
  gather_facts: true 
  connection: smart 
  become: true 

  tasks: 

     - name: Registro usando usuario e senha no RHSM 
       redhat_subscription:
          state: present
          username: "{{ user_nome }}"
          password: "{{ user_senha }}"
          auto_attach: true
          pool_ids:
            - 8a85f98260c27fc50160c32cc4365ccb 

     - name: Disable all RHSM repositories
       rhsm_repository:
         name: '*'
         state: disabled
       ignore_errors: true

     - name: Enable repository rhel-7-server-rpms
       rhsm_repository:
         name: rhel-7-server-rpms
  

# Third play configura httpd service 
- name: Third play configure httpd service and  Firewall policies
  hosts: marrone
  gather_facts: true 
  connection: smart 
  become: true 


  tasks:

    - name: instala apache 
      yum: 
        name: httpd 
        state: present 

    - name: enable e inicia servico 
      systemd: 
         name: httpd 
         state: started
         enabled: yes 

    - name: configuracao de firewall - dois servicos 
      firewalld:
         port: "{{ item }}"
         permanent: true
         state: enabled
         immediate: true 
      with_items: 
         - "{{ servico_01 }}"
         - "{{ servico_02 }}"

# openvm tools instalado 
# perl instalado 
# versao do rhel 7.8 atualziada nao ultima sub release
# vsphsre 6.7 
# parametros passado STRING 